import os

import telebot
from pydub import AudioSegment
from pytubefix import YouTube
from pytubefix.cli import on_progress
from telebot import types

from main_two import rate_us_dollar

bot = telebot.TeleBot('6675946515:AAEr3ILWaVU3tRjlVSErphh7wuCmqZ8slcU')
TOKEN = '6675946515:AAEr3ILWaVU3tRjlVSErphh7wuCmqZ8slcU'


def speech():
    @bot.message_handler(commands=['voice'])
    def start(message):
        bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–Ω–∏–º–∞–µ—Ç –≤–∞—à –≥–æ–ª–æ—Å!'
                                               '\n–°–∫–∞–∂–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å')

    @bot.message_handler(content_types=['voice', 'audio', 'document'])
    def voice_processing(message):
        global AUDIO_FILE, file_info
        if message.content_type == 'voice':
            file_info = bot.get_file(message.voice.file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            with open(f'someone.ogg', 'wb') as f:
                f.write(downloaded_file)
                f.close()
            audio = AudioSegment.from_file("someone.ogg", format="ogg")

            audio.export(f'{file_info.file_path[6:-4]}.flac', format="flac")

            AUDIO_FILE = f"C://Users//user//Desktop//pythonProject//pythonProjectlast//{file_info.file_path[6:-4]}.flac"
        elif message.content_type == 'audio':
            file_info = bot.get_file(message.audio.file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            with open(f'someone.{file_info.file_path[-3:]}', 'wb') as f:
                f.write(downloaded_file)
                f.close()
            audio = AudioSegment.from_file(f"someone.{file_info.file_path[-3:]}", format=f"{file_info.file_path[-3:]}")

            audio.export(f'{file_info.file_path[6:-4]}.flac', format="flac")

            AUDIO_FILE = f"C://Users//user//Desktop//pythonProject//pythonProjectlast//{file_info.file_path[6:-4]}.flac"
        elif message.content_type == 'document':
            file_info = bot.get_file(message.document.file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            with open(f'someone.{file_info.file_path[-3:]}', 'wb') as f:
                f.write(downloaded_file)
                f.close()
            audio = AudioSegment.from_file(f"someone.{file_info.file_path[-3:]}", format=f"{file_info.file_path[-3:]}")

            audio.export(f'{file_info.file_path[10:-4]}.flac', format="flac")

            AUDIO_FILE = f"C://Users//user//Desktop//pythonProject//pythonProjectlast//{file_info.file_path[10:-4]}.flac"
        import speech_recognition as sr
        r = sr.Recognizer()
        with sr.AudioFile(AUDIO_FILE) as source:
            audio = r.record(source)
            #audio = r.record(source)  # read the entire audio file

            try:
                # for testing purposes, we're just using the default API key
                # to use another API key, use `r.recognize_google(audio, key="GOOGLE_SPEECH_RECOGNITION_API_KEY")`
                # instead of `r.recognize_google(audio)`
                text = r.recognize_google(audio, language='ru-RU').capitalize()
                print(text)
            except sr.UnknownValueError:
                bot.send_message(message.from_user.id, "–ù–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ç—ã —Å–∫–∞–∑–∞–ª? /voice")

            except sr.RequestError as e:
                bot.send_message(message.from_user.id, "–ë–æ—Ç –Ω–µ –≤—ã–≤–µ–∑, –æ—à–∏–±–∫–∞: {0}".format(e))
                speech()
        from gigachat import GigaChat

        # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–∫–µ–Ω, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –∏–∑ –ø–æ–ª—è –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        try:
            with GigaChat(credentials='NDdmNmE5NDItNDYwOC00NTU5LWI5ZWQtNDgzZDU0ZDU1ND'
                                      'U4OjJmYmRhYzk0LThlNjMtNDQ3Ny1iNWNlLTk4NTkwMTQxYjYwNg==',
                          verify_ssl_certs=False) as giga:
                response = giga.chat(f'–£ –º–µ–Ω—è –µ—Å—Ç—å —Ç–∞–∫–æ–π —Ç–µ–∫—Å—Ç: "{text}"'
                                     f', –∏—Å–ø—Ä–∞–≤—å –ø—É–Ω–∫—Ç—É–∞—Ü–∏—é –∏ –≤—ã–≤–æ–¥–∏ –º–Ω–µ –¢–û–õ–¨–ö–û –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –¢–ï–ö–°–¢')
                bot.send_message(message.from_user.id, f'<b>–í—ã —Å–∫–∞–∑–∞–ª–∏</b>: \n{response.choices[0].message.content}'
                                                       f'\n\n–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å: —Å–∫–∏–Ω—å—Ç–µ –µ—â—ë –∞—É–¥–∏–æ –∏–ª–∏ /start', parse_mode='html')
        except Exception:
            bot.send_message(message.from_user.id, '–ü–æ—Ö–æ–∂–µ –Ω–µ—á–µ–≥–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ –ø–æ –ø–ª–∞–Ω—É /voice')
        os.remove(AUDIO_FILE)


def download():
    @bot.message_handler(commands=['YouTube'])
    def response(function_continuation):
        second_mess = ("–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–∏—à–ª–∏ —Å—Å—ã–ª–∫—É/—Å—Å—ã–ª–∫–∏ –≤–∏–¥–µ–æ –Ω–∞ youtube!"
                       "\n<b>–í–∞–∂–Ω–æ!</b> <i>–µ—Å–ª–∏ —Ç—ã –∫–∏–¥–∞–µ—à—å —Å—Å—ã–ª–∫–ò, —Ç–æ –∫–∏–¥–∞–π –∏—Ö —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª</i>. –≠—Ç–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ!")

        bot.send_message(function_continuation.chat.id, second_mess, parse_mode='html')

    @bot.message_handler(content_types=['text', 'video'])
    def handle_video(message):
        if message.text:
            yt = None  # –û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é yt –≤–Ω–µ —Ü–∏–∫–ª–∞
            for url in message.text.split(' '):
                try:
                    yt = YouTube(url, on_progress_callback=on_progress)
                    ys = yt.streams.get_highest_resolution()
                    bot.send_message(chat_id=message.chat.id, text='–ñ–¥–µ–º –≤—Å–µ–º —Å–µ–ª–æ–º, –ø–æ–∫–∞ –∑–∞–≥—Ä—É–∑—è—Ç—Å—è –≤–∏–¥–æ—Å–∏–∫–∏')
                    ys.download()
                except Exception as e:
                    print(f'Ooops: {e}')
            bot.send_video(chat_id=message.chat.id, video=open(f'{yt.title}.mp4', 'rb'))
            os.remove(f'{yt.title}.mp4')
        bot.send_message(chat_id=message.chat.id, text='–ò—Å–ø–æ–ª—å–∑—É–π —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º:), /start')


@bot.message_handler(commands=['start'])
def startBot(message):
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name
    space = ' '

    if first_name is None:
        first_name = ''
        space = ''
    elif last_name is None:
        last_name = ''
        space = ''

    first_mess = (f"<b>{first_name}{space + last_name}</b>, –ø—Ä–∏–≤–µ—Ç!\n–≠—Ç–æ —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç,"
                  f" –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã –º–æ–∂–µ—à—å <b>—Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ —Å youtube</b>!"
                  f"\n–¢–∞–∫ –∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è <b>–≥–æ–ª–æ—Å–∞ –≤ —Ç–µ–∫—Å—Ç</b>!"
                  f"\n–í—ã–±–∏—Ä–∞–π ")
    markup = types.InlineKeyboardMarkup()
    button_youtube = types.InlineKeyboardButton(text='–°–∫–∞—á–∏–≤–∞—Ç—å –≤–∏–¥–µ–æ üîÑ', callback_data='download')
    button_voice = types.InlineKeyboardButton(text='–ì–æ–ª–æ—Å –≤ —Ç–µ–∫—Å—Ç üîä', callback_data='talk')
    markup.add(button_youtube, button_voice)
    bot.send_message(message.chat.id, first_mess, parse_mode='html', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data == 'download' or call.data == 'talk')
def advertisement(function_call):
    message = (f"<i>–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç!</i>\n"
               f"–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ —Å–∞–π—Ç–µ –ë–∞–Ω–∫–∞ –†–æ—Å—Å–∏–∏, <b>—Ç–µ–∫—É—â–∏–º –∫—É—Ä—Å–æ–º –¥–æ–ª–ª–∞—Ä–∞</b>\n"
               f"—è–≤–ª—è–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ: <b>{rate_us_dollar}</b>, –∑–Ω–∞–π —ç—Ç–æ\n"
               f"<s>–∑–¥–µ—Å—å –º–æ–≥–ª–∞ –±—ã—Ç—å —Ç–≤–æ—è —Ä–µ–∫–ª–∞–º–∞ https://www.donationalerts.com/r/egor456544</s>")

    bot.send_message(function_call.message.chat.id, message, parse_mode='html')

    if function_call.data == 'talk':
        bot.send_message(function_call.message.chat.id, '–ù–∞–ø–∏—à–∏ /voice', parse_mode='html')
        speech()
    elif function_call.data == 'download':
        bot.send_message(function_call.message.chat.id, '–ù–∞–ø–∏—à–∏ /YouTube', parse_mode='html')
        download()


bot.polling(none_stop=True, interval=0)
